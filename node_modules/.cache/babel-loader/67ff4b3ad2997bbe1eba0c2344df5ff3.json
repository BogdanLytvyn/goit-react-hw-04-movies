{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/GIT/react/goit-react-hw-04-movies/src/components/pages/AuthorsView.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Axios from 'axios';\nimport AuthorBooks from '../conteiner/AuthorBooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class AuthorsView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authors: []\n    };\n  }\n\n  async componentDidMount() {\n    const res = await Axios.get('http://localhost:4040/authors?_embed=books');\n    this.setState({\n      authors: res.data\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Authors page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.authors.map(author => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `${match.url}/${author.id}`,\n            children: author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:authorID`,\n        render: props => {\n          const bookID = Number(props.match.params.authorID);\n          const author = this.state.authors.find(({\n            id\n          }) => id === bookID);\n          return author && /*#__PURE__*/_jsxDEV(AuthorBooks, { ...props,\n            books: author.books\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/bogdan/GIT/react/goit-react-hw-04-movies/src/components/pages/AuthorsView.js"],"names":["React","Component","NavLink","Route","Axios","AuthorBooks","AuthorsView","state","authors","componentDidMount","res","get","setState","data","render","match","props","map","author","url","id","name","path","bookID","Number","params","authorID","find","books"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AACNC,MAAAA,OAAO,EAAE;AADH,KADyC;AAAA;;AAK1B,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,4CAAV,CAAlB;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAEE,GAAG,CAACG;AAAf,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACG,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAuBC,MAAM,iBAC5B;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAG,GAAEH,KAAK,CAACI,GAAI,IAAGD,MAAM,CAACE,EAAG,EAAvC;AAAA,sBAA2CF,MAAM,CAACG;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF,WAASH,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEL,KAAK,CAACO,IAAK,YADtB;AAEE,QAAA,MAAM,EAAEN,KAAK,IAAI;AACf,gBAAMO,MAAM,GAAGC,MAAM,CAACR,KAAK,CAACD,KAAN,CAAYU,MAAZ,CAAmBC,QAApB,CAArB;AACA,gBAAMR,MAAM,GAAG,KAAKX,KAAL,CAAWC,OAAX,CAAmBmB,IAAnB,CAAwB,CAAC;AAAEP,YAAAA;AAAF,WAAD,KAAYA,EAAE,KAAKG,MAA3C,CAAf;AAEA,iBACEL,MAAM,iBACJ,QAAC,WAAD,OAAiBF,KAAjB;AAAwB,YAAA,KAAK,EAAEE,MAAM,CAACU;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAKD;AAXH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,oBADF;AA0BD;;AAtCgD","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Axios from 'axios';\nimport AuthorBooks from '../conteiner/AuthorBooks';\n\nexport default class AuthorsView extends Component {\n  state = {\n    authors: [],\n  };\n\n  async componentDidMount() {\n    const res = await Axios.get('http://localhost:4040/authors?_embed=books');\n    this.setState({ authors: res.data });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <>\n        <h2> Authors page</h2>\n        <ul>\n          {this.state.authors.map(author => (\n            <li key={author.id}>\n              <NavLink to={`${match.url}/${author.id}`}>{author.name}</NavLink>\n            </li>\n          ))}\n        </ul>\n\n        <Route\n          path={`${match.path}/:authorID`}\n          render={props => {\n            const bookID = Number(props.match.params.authorID);\n            const author = this.state.authors.find(({ id }) => id === bookID);\n\n            return (\n              author && (\n                <AuthorBooks {...props} books={author.books}></AuthorBooks>\n              )\n            );\n          }}\n        ></Route>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}