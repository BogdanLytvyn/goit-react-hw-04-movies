{"version":3,"sources":["components/pages/moviesPage/MoviesPage.js","components/movieList/MovieList.js","components/movieList/MovieList.module.scss"],"names":["MoviesPage","state","searchQuery","query","movies","handlerInput","e","setState","target","value","handlerSubmit","preventDefault","prevProps","prevState","a","this","axios","get","process","res","data","results","console","log","className","onSubmit","id","label","type","autoComplete","autoFocus","placeholder","aria-label","onChange","variant","color","Component","withRouter","location","style","movieList","map","movie","cardMovie","to","pathname","from","cardPic","src","poster_path","alt","title","module","exports"],"mappings":"2TAOqBA,E,4MACnBC,MAAQ,CACNC,YAAa,GACbC,MAAO,GACPC,OAAQ,I,EAaVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEL,YAAaI,EAAEE,OAAOC,S,EAGxCC,cAAgB,SAAAJ,GACdA,EAAEK,iBACF,EAAKJ,SAAS,CAAEJ,MAAO,EAAKF,MAAMC,e,+FAhBpC,WAAyBU,EAAWC,GAApC,iBAAAC,EAAA,yDACMD,EAAUV,QAAUY,KAAKd,MAAME,MADrC,uBAEYA,EAAUY,KAAKd,MAAfE,MAFZ,SAGsBa,IAAMC,IAAN,UACbC,+BADa,iCAC8CA,mCAD9C,kBACiFf,IAJvG,OAGUgB,EAHV,OAMIJ,KAAKR,SAAS,CAAEH,OAAQe,EAAIC,KAAKC,UANrC,gD,6EAmBA,WAAU,IAAD,EACyBN,KAAKd,MAA7BC,EADD,EACCA,YAAaE,EADd,EACcA,OAErB,OADAkB,QAAQC,IAAInB,GAEV,qCACE,uBAAMoB,UAAU,YAAYC,SAAUV,KAAKL,cAA3C,UACE,cAAC,IAAD,CACEgB,GAAG,kBACHC,MAAM,eACNC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,aAAW,SACXvB,MAAOP,EACP+B,SAAUlB,KAAKV,eAEjB,cAAC,IAAD,CACE6B,QAAQ,WACRC,MAAM,UACNX,UAAU,aACVC,SAAUV,KAAKL,cACfkB,KAAK,SALP,uBAUF,cAAC,IAAD,CAAWxB,OAAQW,KAAKd,MAAMG,gB,GArDEgC,c,gCCPxC,gDA8BeC,iBA1Bf,YAA0C,IAArBjC,EAAoB,EAApBA,OAAQkC,EAAY,EAAZA,SAC3B,OACE,oBAAId,UAAWe,IAAMC,UAArB,SACGpC,EAAOqC,KAAI,SAAAC,GAAK,OACf,oBAAmBlB,UAAWe,IAAMI,UAApC,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYH,EAAMhB,IAC1BzB,MAAO,CACL6C,KAAMR,IAJZ,UAQE,qBACEd,UAAWe,IAAMQ,QACjBC,IAAG,6DAAwDN,EAAMO,aACjEC,IAAI,gBAEN,oBAAI1B,UAAWe,IAAMY,MAArB,SAA6BT,EAAMS,YAd9BT,EAAMhB,a,mBCPvB0B,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,yBAAyB,QAAU","file":"static/js/movies-page.2ad8a333.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MovieList from '../../movieList/MovieList';\nimport axios from 'axios';\n\nexport default class MoviesPage extends Component {\n  state = {\n    searchQuery: '',\n    query: '',\n    movies: [],\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      const { query } = this.state;\n      const res = await axios.get(\n        `${process.env.REACT_APP_DATA_BASEURL}/search/movie?api_key=${process.env.REACT_APP_KEY}&query=${query}`,\n      );\n      this.setState({ movies: res.data.results });\n    }\n  }\n\n  handlerInput = e => {\n    this.setState({ searchQuery: e.target.value });\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n    this.setState({ query: this.state.searchQuery });\n  };\n\n  render() {\n    const { searchQuery, movies } = this.state;\n    console.log(movies);\n    return (\n      <>\n        <form className=\"searchFom\" onSubmit={this.handlerSubmit}>\n          <TextField\n            id=\"standard-search\"\n            label=\"Search field\"\n            type=\"search\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"movie name\"\n            aria-label=\"Search\"\n            value={searchQuery}\n            onChange={this.handlerInput}\n          />\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className=\"buttonForm\"\n            onSubmit={this.handlerSubmit}\n            type=\"submit\"\n          >\n            Search\n          </Button>\n        </form>\n        <MovieList movies={this.state.movies}></MovieList>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport style from './MovieList.module.scss';\n\nfunction MovieList({ movies, location }) {\n  return (\n    <ul className={style.movieList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={style.cardMovie}>\n          <Link\n            to={{\n              pathname: `/movie/${movie.id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            <img\n              className={style.cardPic}\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}\n              alt=\"Photo title\"\n            />\n            <h5 className={style.title}>{movie.title}</h5>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default withRouter(MovieList);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieList\":\"MovieList_movieList__1c63j\",\"cardMovie\":\"MovieList_cardMovie__2GNEp\",\"title\":\"MovieList_title__3tKys\",\"cardPic\":\"MovieList_cardPic__d7evL\"};"],"sourceRoot":""}